{"version":3,"sources":["file:///Users/xiejiapei/NewProject_1/assets/script/framework/configuration.ts"],"names":["log","sys","_decorator","ccclass","configuration","jsonData","path","KEY_CONFIG","markSave","saveTimer","instance","_instance","start","getConfigPath","content","isNative","valueObject","jsb","fileUtils","getValueMapFromFile","localStorage","getItem","length","startsWith","substring","JSON","parse","excepaiton","setInterval","scheduleSave","setConfigDataWithoutSave","key","value","account","userId","console","error","setConfigData","getConfigData","setGlobalData","save","getGlobalData","setUserId","getUserId","markModified","str","stringify","zipStr","ls","setItem","valueObj","writeToFile","platform","OS_WINDOWS","OS_LINUX","getWritablePath","parseUrl","paramStr","dictParam","split","arrParam","forEach","paramValue","idxEqual","indexOf","action","source","adchannelid","generateGuestAccount","Date","now","Math","random"],"mappings":"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","sourcesContent":["import { Asset, log, sys, _decorator } from \"cc\";\nconst { ccclass } = _decorator;\n\ndeclare const jsb: any;\nexport type ValueObj = { [name: string]: string };\n\nexport type Constructor<T = unknown> = new (...args: any[]) => T;\nexport type AssetType<T = Asset> = Constructor<T>;\nexport type LoadCompleteCallback<T> = (error: Error | null, asset: T) => void;\n\n@ccclass(\"configuration\")\nexport class configuration {\n    static _instance: configuration;\n\n    static get instance () {\n        if (this._instance) {\n            return this._instance;\n        }\n\n        this._instance = new configuration();\n        this._instance.start();\n        return this._instance;\n    }\n\n    jsonData: any = null;\n    path: any = null;\n    KEY_CONFIG: string = 'CarConfig';\n    markSave: boolean = false;\n    saveTimer: number = -1;\n\n    start () {\n        this.jsonData = {\n            \"userId\": \"\"\n        };\n\n        this.path = this.getConfigPath();\n\n        let content;\n        if (sys.isNative) {\n            const valueObject = jsb.fileUtils.getValueMapFromFile(this.path);\n\n            content = valueObject[this.KEY_CONFIG];\n        } else {\n            content = sys.localStorage.getItem(this.KEY_CONFIG);\n        }\n\n        if (content && content.length) {\n            if (content.startsWith('@')) {\n                content = content.substring(1);\n            }\n\n            try {\n                //初始化操作\n                const jsonData = JSON.parse(content);\n                this.jsonData = jsonData;\n            }catch (excepaiton) {\n\n            }\n\n        }\n\n        //启动无限定时器，每1秒保存一次数据，而不是无限保存数据\n        this.saveTimer = setInterval(() =>{\n            this.scheduleSave();\n        }, 500);\n    }\n\n    setConfigDataWithoutSave (key: string, value: any) {\n        const account = this.jsonData.userId;\n        if (this.jsonData[account]) {\n            this.jsonData[account][key] = value;\n        } else {\n            console.error(\"no account can not save\");\n        }\n    }\n\n    setConfigData (key: string, value: any) {\n        this.setConfigDataWithoutSave(key, value);\n\n        // this.save();\n        this.markSave = true; //标记为需要存储，避免一直在写入，而是每隔一段时间进行写入\n    }\n\n    getConfigData (key: string) {\n        const account = this.jsonData.userId;\n        if (this.jsonData[account]) {\n            const value = this.jsonData[account][key];\n            return value ? value : \"\";\n        } else {\n            log(\"no account can not load\");\n            return \"\";\n        }\n    }\n\n    setGlobalData (key:string, value: any) {\n        this.jsonData[key] = value;\n        this.save();\n    }\n\n    getGlobalData (key:string) {\n        return this.jsonData[key];\n    }\n\n    setUserId (userId:string) {\n        this.jsonData.userId = userId;\n        if (!this.jsonData[userId]) {\n            this.jsonData[userId] = {};\n        }\n\n        this.save();\n    }\n\n    getUserId () {\n        return this.jsonData.userId;\n    }\n\n    scheduleSave () {\n        if (!this.markSave) {\n            return;\n        }\n\n        this.save();\n    }\n\n    /**\n     * 标记为已修改\n     */\n    markModified () {\n        this.markSave = true;\n    }\n\n    save () {\n        // 写入文件\n        const str = JSON.stringify(this.jsonData);\n\n        let zipStr = str;\n\n        this.markSave = false;\n\n        if (!sys.isNative) {\n            const ls = sys.localStorage;\n            ls.setItem(this.KEY_CONFIG, zipStr);\n            return;\n        }\n\n        const valueObj: ValueObj = {};\n        valueObj[this.KEY_CONFIG] = zipStr;\n        jsb.fileUtils.writeToFile(valueObj, this.path);\n\n    }\n\n    getConfigPath () {\n\n        const platform = sys.platform;\n\n        let path = \"\";\n\n        if (platform === sys.OS_WINDOWS) {\n            path = \"src/conf\";\n        } else if (platform === sys.OS_LINUX) {\n            path = \"./conf\";\n        } else {\n            if (sys.isNative) {\n                path = jsb.fileUtils.getWritablePath();\n                path = path + \"conf\";\n            } else {\n                path = \"src/conf\";\n            }\n        }\n\n        return path;\n    }\n\n    parseUrl (paramStr: string) {\n        if (!paramStr || (typeof paramStr === 'string' && paramStr.length <= 0)) {\n            // 没有带参数，直接忽略\n            return;\n        }\n\n        let dictParam: any = {};\n        if (typeof paramStr === 'string') {\n            paramStr = paramStr.split('?')[1]; // 去除掉 ？号\n            const arrParam = paramStr.split(\"&\");\n            arrParam.forEach(function (paramValue) {\n                const idxEqual = paramValue.indexOf(\"=\");\n                if (idxEqual !== -1) {\n                    const key = paramValue.substring(0, idxEqual);\n                    dictParam[key] = paramValue.substring(idxEqual + 1);\n                }\n            });\n        } else {\n            dictParam = paramStr;\n        }\n\n        if (dictParam.action) {\n            this.setGlobalData('urlParams', dictParam);\n        }\n\n        // todo：记录来源，以后用到\n        if (dictParam.source) {\n            this.setGlobalData('source', dictParam.source);\n        }\n\n        if (dictParam.adchannelid) {\n            this.setGlobalData('adchannelid', dictParam.adchannelid);\n        }\n    }\n\n    /**\n     * 生成随机账户\n     * @returns\n     */\n    public static generateGuestAccount () {\n        return `${Date.now()}${0 | (Math.random() * 1000, 10)}`;\n    }\n}\n"]}