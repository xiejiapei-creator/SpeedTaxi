{"version":3,"sources":["file:///Users/xiejiapei/NewProject_1/assets/script/ui/main/setting.ts"],"names":["_decorator","Component","Sprite","SpriteFrame","Label","localConfig","audioManager","configuration","uiManager","gameLogic","i18n","ccclass","property","setting","isSoundOpen","isVibrateOpen","clickTimes","checkState","data","instance","getConfiguration","closeMusic","closeSound","openMusic","openSound","start","show","lbVersion","string","t","getVersion","refreshSwitchUI","spVibrateSwitch","spriteFrame","imgSwitchOpen","imgSwitchClose","spSoundSwitch","onBtnVibrateClick","onBtnSoundClick","setGlobalData","onBtnCloseClick","hideDialog"],"mappings":"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","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nimport { _decorator, Component, Sprite, SpriteFrame, Label } from \"cc\";\nimport { localConfig } from \"../../framework/localConfig\";\nimport { audioManager } from \"../../framework/audioManager\";\nimport { configuration } from \"../../framework/configuration\";\nimport { uiManager } from \"../../framework/uiManager\";\nimport { gameLogic } from \"../../logic/gameLogic\";\nimport { constant } from \"../../framework/constant\";\nimport { i18n } from \"../../i18nMaster/runtime-scripts/LanguageData\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"setting\")\nexport class setting extends Component {\n    /* class member could be defined like this */\n    // dummy = '';\n\n    @property(Sprite)\n    spVibrateSwitch: Sprite = null;\n\n    @property(Sprite)\n    spSoundSwitch: Sprite = null;\n\n    @property(SpriteFrame)\n    imgSwitchOpen: SpriteFrame = null;\n\n    @property(SpriteFrame)\n    imgSwitchClose: SpriteFrame = null;\n\n    @property(Label)\n    lbVersion: Label = null;\n    isSoundOpen: boolean;\n    isVibrateOpen: boolean;\n\n    clickTimes = 0;//展示次数\n\n    static checkState(){\n        const data = audioManager.instance.getConfiguration(true);\n        if (!data) {\n            audioManager.instance.closeMusic();\n            audioManager.instance.closeSound();\n        } else {\n            audioManager.instance.openMusic();\n            audioManager.instance.openSound();\n        }\n    }\n\n    start () {\n        // Your initialization goes here.\n    }\n\n    show () {\n        this.clickTimes += 1;\n\n        this.lbVersion.string = `${i18n.t(\"setting.version\")} ${localConfig.instance.getVersion()}`;\n\n        this.isSoundOpen = audioManager.instance.getConfiguration(true);\n        this.isVibrateOpen = gameLogic.isVibrateOpen();\n\n        this.refreshSwitchUI();\n    }\n\n    refreshSwitchUI () {\n        if (this.isVibrateOpen) {\n            this.spVibrateSwitch.spriteFrame = this.imgSwitchOpen;\n        } else {\n            this.spVibrateSwitch.spriteFrame = this.imgSwitchClose;\n        }\n\n        if (this.isSoundOpen) {\n            this.spSoundSwitch.spriteFrame = this.imgSwitchOpen;\n        } else {\n            this.spSoundSwitch.spriteFrame = this.imgSwitchClose;\n        }\n    }\n\n    onBtnVibrateClick () {\n        // this.isVibrateOpen = !this.isVibrateOpen;\n        // configuration.instance.setGlobalData('vibrate', this.isVibrateOpen);\n        // this.refreshSwitchUI();\n    }\n\n    onBtnSoundClick () {\n        this.isSoundOpen = !this.isSoundOpen;\n\n        if (!this.isSoundOpen) {\n            audioManager.instance.closeMusic();\n            audioManager.instance.closeSound();\n        } else {\n            audioManager.instance.openMusic();\n            audioManager.instance.openSound();\n        }\n        configuration.instance.setGlobalData('music', `${this.isSoundOpen}`);\n        this.refreshSwitchUI();\n    }\n\n    onBtnCloseClick () {\n        uiManager.instance.hideDialog('main/setting');\n    }\n\n    // update (deltaTime: number) {\n    //     // Your update function goes here.\n    // }\n}\n"]}