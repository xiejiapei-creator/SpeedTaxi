{"version":3,"sources":["file:///Users/xiejiapei/SpeedTaxi/assets/script/ui/common/tips.ts"],"names":["_decorator","Component","Label","Vec3","tween","isValid","UITransform","poolManager","ccclass","property","tips","targetPos","start","show","content","callback","node","setPosition","lbTips","string","lbTipTrans","getComponent","size","contentSize","instance","putNode","uiTrans","setContentSize","width","height","scheduleOnce","by","call"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,O,OAAAA,O;AAASC,MAAAA,W,OAAAA,W;;AAC1DC,MAAAA,W,iBAAAA,W;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;sBAGjBU,I,WADZF,OAAO,CAAC,MAAD,C,UAEHC,QAAQ,CAACP,KAAD,C,2BAFb,MACaQ,IADb,SAC0BT,SAD1B,CACoC;AAAA;AAAA;;AAAA;;AAAA,eAGhCU,SAHgC;AAAA;;AAKhCC,QAAAA,KAAK,GAAI,CACL;AACH;;AAEDC,QAAAA,IAAI,CAAEC,OAAF,EAAmBC,QAAnB,EAAwC;AACxC,eAAKJ,SAAL,GAAiB,IAAIR,IAAJ,CAAS,CAAT,EAAY,GAAZ,EAAiB,CAAjB,CAAjB;AACA,eAAKa,IAAL,CAAUC,WAAV,CAAsB,KAAKN,SAA3B,EAFwC,CAGxC;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAKO,MAAL,CAAYC,MAAZ,GAAqBL,OAArB;AACA,cAAMM,UAAU,GAAG,KAAKF,MAAL,CAAYF,IAAZ,CAAiBK,YAAjB,CAA8Bf,WAA9B,CAAnB;AACA,cAAIgB,IAAI,GAAGF,UAAU,CAACG,WAAtB;;AACA,cAAI,CAAClB,OAAO,CAACiB,IAAD,CAAZ,EAAoB;AAAC;AACjB;AACA;AAAA;AAAA,4CAAYE,QAAZ,CAAqBC,OAArB,CAA6B,KAAKT,IAAlC;AACA;AACH;;AAED,cAAMU,OAAO,GAAG,KAAKV,IAAL,CAAUK,YAAV,CAAuBf,WAAvB,CAAhB;AACAoB,UAAAA,OAAO,CAACC,cAAR,CAAuBL,IAAI,CAACM,KAAL,GAAa,GAAb,GAAmB,GAAnB,GAAyB,GAAzB,GAA+BN,IAAI,CAACM,KAAL,GAAa,GAAnE,EAAwEN,IAAI,CAACO,MAAL,GAAc,EAAtF;AAEA,eAAKC,YAAL,CAAkB,MAAI;AAClB1B,YAAAA,KAAK,CAAC,KAAKO,SAAN,CAAL,CACKoB,EADL,CACQ,GADR,EACa,IAAI5B,IAAJ,CAAS,CAAT,EAAY,GAAZ,EAAiB,CAAjB,CADb,EAEK6B,IAFL,CAEU,MAAI;AACNjB,cAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACA;AAAA;AAAA,8CAAYS,QAAZ,CAAqBC,OAArB,CAA6B,KAAKT,IAAlC;AACH,aALL,EAMKJ,KANL;AAOH,WARD,EAQG,GARH;AASH,SA9C+B,CAgDhC;AACA;AACA;;;AAlDgC,O;;;;;iBAEhB,I","sourcesContent":["import { _decorator, Component, Node, Label, Vec3, tween, isValid, UITransform } from 'cc';\nimport { poolManager } from '../../framework/poolManager';\n\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('tips')\nexport class tips extends Component {\n    @property(Label)\n    lbTips: Label = null!;\n    targetPos: any;\n\n    start () {\n        // Your initialization goes here.\n    }\n\n    show (content: string, callback?: Function) {\n        this.targetPos = new Vec3(0, 200, 0);\n        this.node.setPosition(this.targetPos);\n        // this.node.getComponent(Sprite).color = new Color(255, 255, 255, 255);\n\n        // this.lbTips.maxWidth = 0;\n        // this.lbTips.string = '<color=#001D34>'+ content +'</color>';\n\n        // //修改底图大小\n        // let width = this.lbTips._linesWidth;\n        // if (width.length && width[0] < 500) {\n        //     this.lbTips.maxWidth = width[0];\n        // } else {\n        //     this.lbTips.maxWidth = 500;\n        //     this.lbTips.node.setContentSize(500, this.lbTips.node.getContentSize().height);\n        // }\n        this.lbTips.string = content;\n        const lbTipTrans = this.lbTips.node.getComponent(UITransform)!;\n        let size = lbTipTrans.contentSize;\n        if (!isValid(size)) {//size不存在，自我销毁\n            // tipsNode.destroy();\n            poolManager.instance.putNode(this.node);\n            return;\n        }\n\n        const uiTrans = this.node.getComponent(UITransform)!;\n        uiTrans.setContentSize(size.width + 100 < 240 ? 240 : size.width + 100, size.height + 30);\n\n        this.scheduleOnce(()=>{\n            tween(this.targetPos)\n                .by(0.8, new Vec3(0, 150, 0))\n                .call(()=>{\n                    callback && callback();\n                    poolManager.instance.putNode(this.node);\n                })\n                .start();\n        }, 0.8);\n    }\n\n    // update (deltaTime: number) {\n    //     // Your update function goes here.\n    // }\n}\n"]}