{"version":3,"sources":["file:///Users/xiejiapei/NewProject_1/assets/script/ui/main/trial.ts"],"names":["_decorator","Component","Node","Vec3","Sprite","Widget","uiManager","gameLogic","constant","localConfig","playerData","poolManager","resourceUtil","clientEvent","ccclass","property","trial","currentCar","carDegree","rotateSpeed","carId","_callback","undefined","start","show","callback","updateRewardIcon","SHARE_FUNCTION","TRIAL","spIcon","instance","putNode","arrCars","getCars","arrLottery","forEach","element","hasCar","ID","push","length","onBtnCloseClick","rand","Math","floor","random","carInfo","queryByID","toString","getUICar","model","err","prefab","console","error","getNode","nodeCarParent","hideDialog","onBtnTrialClick","openReward","type","showCar","dispatchEvent","update","deltaTime","eulerAngles"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, Sprite, Widget } from \"cc\";\nimport { uiManager } from \"../../framework/uiManager\";\nimport { gameLogic } from \"../../logic/gameLogic\";\nimport { constant } from \"../../framework/constant\";\nimport { localConfig } from \"../../framework/localConfig\";\nimport { playerData } from \"../../framework/playerData\";\nimport { poolManager } from \"../../framework/poolManager\";\nimport { resourceUtil } from \"../../framework/resourceUtil\";\nimport { clientEvent } from \"../../framework/clientEvent\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"trial\")\nexport class trial extends Component {\n    /* class member could be defined like this */\n    // dummy = '';\n\n    @property(Node)\n    nodeCarParent: Node = null!;\n\n    @property(Widget)\n    wgMenu: Widget = null!;\n\n    currentCar: Node | null = null;\n    carDegree: number = 0;\n    rotateSpeed: number = 30;\n    carId = 0;\n\n    @property(Sprite)\n    spIcon: Sprite = null!;\n    _callback: Function | undefined = undefined;\n\n    start () {\n        // Your initialization goes here.\n    }\n\n    show (callback: Function) {\n        this._callback = callback;\n\n        gameLogic.updateRewardIcon(constant.SHARE_FUNCTION.TRIAL, this.spIcon);\n\n        if (this.currentCar) {\n            poolManager.instance.putNode(this.currentCar);\n            this.currentCar = null;\n        }\n\n        //随机辆未拥有的车\n        let arrCars = localConfig.instance.getCars(); //获得所有车\n        let arrLottery: number[] = [];\n        arrCars.forEach(element => {\n            if (!playerData.instance.hasCar(element.ID)) {\n                //未拥有的车辆，加入抽奖列表\n                arrLottery.push(element.ID);\n            }\n        });\n\n        if (arrLottery.length <= 0) {\n            //已经拥有全部车辆\n            this.onBtnCloseClick();\n            return;\n        }\n\n        let rand = Math.floor(Math.random() * arrLottery.length);\n\n        this.carId = arrLottery[rand];\n        let carInfo = localConfig.instance.queryByID('car', this.carId.toString());\n\n        resourceUtil.getUICar(carInfo.model, (err, prefab)=>{\n            if (err) {\n                console.error(err, carInfo.model);\n                return;\n            }\n\n            this.carDegree = 0;\n            this.currentCar = poolManager.instance.getNode(prefab, this.nodeCarParent);\n        });\n    }\n\n    onBtnCloseClick () {\n        uiManager.instance.hideDialog('main/trial');\n        this._callback && this._callback();\n    }\n\n    onBtnTrialClick () {\n        gameLogic.openReward(constant.SHARE_FUNCTION.TRIAL, (err, type)=>{\n            if (err) {\n                return;\n            }\n\n            playerData.instance.showCar = this.carId;\n            clientEvent.dispatchEvent('updateCar');\n            this.onBtnCloseClick();\n        });\n    }\n\n    update (deltaTime: number) {\n        //旋转展示车辆\n        if (this.currentCar) {\n            this.carDegree -= deltaTime * this.rotateSpeed;\n\n            if (this.carDegree <= -360) {\n                this.carDegree += 360;\n            }\n\n            this.currentCar.eulerAngles = new Vec3(0, this.carDegree, 0);\n        }\n    }\n}\n"]}