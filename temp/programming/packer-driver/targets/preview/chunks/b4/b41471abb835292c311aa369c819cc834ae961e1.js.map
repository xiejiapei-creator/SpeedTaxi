{"version":3,"sources":["file:///Users/xiejiapei/Documents/3D%20Game/Car/assets/script/framework/util.ts"],"names":["_decorator","ccclass","property","util","clone","sObj","s","constructor","Array","i","hasOwnProperty","objectToArray","srcObj","resultArr","key","push","arrayToObject","objectKey","resultObj","getWeightRandIndex","weightArr","totalWeight","randWeight","Math","floor","random","sum","weightIndex","length","getRandomNFromM","n","m","array","intRd","count","getRandomInt","flag","min","max","r","rr","getStringLength","render","strArr","len","val","charCodeAt","ceil","isEmptyObject","obj","result","Object","formatNum","num","k","sizes","round","log","parseInt","pow","toString","isNewDay","dateValue","oldDate","Date","curDate","oldYear","getFullYear","oldMonth","getMonth","oldDay","getDate","curYear","curMonth","curDay","getPropertyCount","o","difference","diff","indexOf","simulationUUID","s4","substring","trim","str","replace","isNowValid","start","end","startTime","endTime","getDeltaDays","startData","endData","startYear","startMonth","startDate","endYear","endMonth","endDate","getTime","deltaTime","getMin","Number","formatTwoDigits","time","join","slice","formatDate","date","fmt","getHours","getMinutes","getSeconds","getMilliseconds","test","RegExp","$1","substr","getDay","formatMoney","money","arrUnit","strValue","idx","formatTimeForSecond","leftSec","timeStr","sec","leftMin","hour","formatTimeForMillisecond","ms","second","minute","strSecond","strMinute","strHour","zip","binaryString","pako","gzip","encodeURIComponent","to","base64encode","rand","arr","arrClone","randomIndex","itemIndex"],"mappings":"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","sourcesContent":["import { _decorator, Component } from \"cc\";\nconst { ccclass, property } = _decorator;\n\ndeclare const pako: any;\n\n@ccclass(\"util\")\nexport class util {\n    /**\n     * !#zh 拷贝object。\n     */\n    public static clone (sObj: any) {\n        if (sObj === null || typeof sObj !== \"object\") {\n            return sObj;\n        }\n\n        let s: any = {};\n        if (sObj.constructor === Array) {\n            s = [];\n        }\n\n        for (const i in sObj) {\n            if (sObj.hasOwnProperty(i)) {\n                s[i] = this.clone(sObj[i]);\n            }\n        }\n\n        return s;\n    }\n\n    /**\n     * 将object转化为数组。\n     */\n    public static objectToArray(srcObj: any) {\n\n        const resultArr = [];\n\n        // to array\n        for (let key in srcObj) {\n            if (!srcObj.hasOwnProperty(key)) {\n                continue;\n            }\n\n            resultArr.push(srcObj[key]);\n        }\n\n        return resultArr;\n    }\n\n    /**\n     * !#zh 将数组转化为object。\n     */\n    public static arrayToObject (srcObj: any, objectKey: any) {\n\n        const resultObj: any = {};\n\n        // to object\n        for (let key in srcObj) {\n            if (!srcObj.hasOwnProperty(key) || !srcObj[key][objectKey]) {\n                continue;\n            }\n\n            resultObj[srcObj[key][objectKey]] = srcObj[key];\n        }\n\n        return resultObj;\n    }\n\n    // 根据权重,计算随机内容\n    public static getWeightRandIndex (weightArr: any, totalWeight: number) {\n        const randWeight = Math.floor(Math.random() * totalWeight);\n        let sum = 0;\n        let weightIndex = 0;\n        for (weightIndex; weightIndex < weightArr.length; weightIndex++) {\n            sum += weightArr[weightIndex];\n            if (randWeight < sum) {\n                break;\n            }\n        }\n\n        return weightIndex;\n    }\n\n    /**\n     * 从n个数中获取m个随机数\n     * @param {Number} n   总数\n     * @param {Number} m    获取数\n     * @returns {Array} array   获取数列\n     */\n    public static getRandomNFromM (n: number, m: number) {\n        const array: number[] = [];\n        let intRd = 0;\n        let count = 0;\n\n        while (count < m) {\n            if (count >= n + 1) {\n                break;\n            }\n\n            intRd = this.getRandomInt(0, n);\n            let flag = 0;\n            for (let i = 0; i < count; i++) {\n                if (array[i] === intRd) {\n                    flag = 1;\n                    break;\n                }\n            }\n\n            if (flag === 0) {\n                array[count] = intRd;\n                count++;\n            }\n        }\n\n        return array;\n    }\n\n    public static getRandomInt (min: number, max: number) {\n        const r = Math.random();\n        const rr = r * (max - min + 1) + min;\n        return Math.floor(rr);\n    }\n\n    public static getStringLength (render: string) {\n        const strArr = render;\n        let len = 0;\n        for (let i = 0, n = strArr.length; i < n; i++) {\n            const val = strArr.charCodeAt(i);\n            if (val <= 255) {\n                len = len + 1;\n            } else {\n                len = len + 2;\n            }\n        }\n\n        return Math.ceil(len / 2);\n    }\n\n    /**\n     * 判断传入的参数是否为空的Object。数组或undefined会返回false\n     * @param obj\n     */\n    public static isEmptyObject (obj: any) {\n        let result = true;\n        if (obj && obj.constructor === Object) {\n            for (const key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    result = false;\n                    break;\n                }\n            }\n        } else {\n            result = false;\n        }\n\n        return result;\n    }\n\n    public static formatNum (num: number) {\n        // 0 和负数均返回 NaN。特殊处理。\n        if (num <= 0) {\n            return '0';\n        }\n\n        const k = 1000;\n        const sizes = ['', '', 'K', 'M', 'B'];\n        const i = Math.round(Math.log(num) / Math.log(k));\n        return parseInt((num / (Math.pow(k, i - 1 < 0 ? 0 : i - 1))).toString(), 10) + sizes[i];\n    }\n\n    /**\n     * 判断是否是新的一天\n     * @param {Object|Number} dateValue 时间对象 todo MessageCenter 与 pve 相关的时间存储建议改为 Date 类型\n     * @returns {boolean}\n     */\n    public static isNewDay (dateValue: any) {\n        // todo：是否需要判断时区？\n        const oldDate = new Date(dateValue);\n        const curDate = new Date();\n\n        const oldYear = oldDate.getFullYear();\n        const oldMonth = oldDate.getMonth();\n        const oldDay = oldDate.getDate();\n        const curYear = curDate.getFullYear();\n        const curMonth = curDate.getMonth();\n        const curDay = curDate.getDate();\n\n        if (curYear > oldYear) {\n            return true;\n        } else {\n            if (curMonth > oldMonth) {\n                return true;\n            } else {\n                if (curDay > oldDay) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    public static getPropertyCount(o: Object) {\n        let n, count = 0;\n        for (n in o) {\n            if (o.hasOwnProperty(n)) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    /**\n     * 返回一个差异化数组（将array中diff里的值去掉）\n     * @param array\n     * @param diff\n     */\n    public static difference (array: any, diff: any) {\n        const result: number[] = [];\n        if (array.constructor !== Array || diff.constructor !== Array) {\n            return result;\n        }\n\n        const length = array.length;\n        for (let i = 0; i < length; i++) {\n            if (diff.indexOf(array[i]) === -1) {\n                result.push(array[i]);\n            }\n        }\n\n        return result;\n    }\n\n    // 模拟传msg的uuid\n    public static simulationUUID () {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n\n    public static trim (str: string) {\n        return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n    }\n\n    /**\n     * 判断当前时间是否在有效时间内\n     * @param {String|Number} start 起始时间。带有时区信息\n     * @param {String|Number} end 结束时间。带有时区信息\n     */\n    public static isNowValid (start: string | number, end: string | number) {\n        const startTime = new Date(start);\n        const endTime = new Date(end);\n        let result = false;\n\n        if (startTime.getDate() + '' !== 'NaN' && endTime.getDate() + '' !== 'NaN') {\n            const curDate = new Date();\n            result = curDate < endTime && curDate > startTime;\n        }\n\n        return result;\n    }\n\n    public static getDeltaDays(start: string | number, end: string | number) {\n        const startData = new Date(start);\n        const endData = new Date(end);\n\n        const startYear = startData.getFullYear();\n        const startMonth = startData.getMonth() + 1;\n        const startDate = startData.getDate();\n        const endYear = endData.getFullYear();\n        const endMonth = endData.getMonth() + 1;\n        const endDate = endData.getDate();\n\n        start = new Date(startYear + '/' + startMonth + '/' + startDate + ' GMT+0800').getTime();\n        end = new Date(endYear + '/' + endMonth + '/' + endDate + ' GMT+0800').getTime();\n\n        const deltaTime = end - start;\n        return Math.floor(deltaTime / (24 * 60 * 60 * 1000));\n    }\n\n    public static getMin (array: any) {\n        let result = 0;\n        if (array.constructor === Array) {\n            const length = array.length;\n            for (let i = 0; i < length; i++) {\n                if (i === 0) {\n                    result = Number(array[0]);\n                } else {\n                    result = result > Number(array[i]) ? Number(array[i]) : result;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    public static formatTwoDigits(time: number) {\n        return (Array(2).join('0') + time).slice(-2);\n    }\n\n    public static formatDate(date: Date, fmt: string) {\n        const o: { [name: string]: number } = {\n            \"M+\": date.getMonth() + 1, //月份\n            \"d+\": date.getDate(), //日\n            \"h+\": date.getHours(), //小时\n            \"m+\": date.getMinutes(), //分\n            \"s+\": date.getSeconds(), //秒\n            \"q+\": Math.floor((date.getMonth() + 3) / 3), //季度\n            \"S\": date.getMilliseconds() //毫秒\n        };\n\n        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n        for (const k in o)\n            if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (`${o[k]}`) : ((`00${o[k]}`).substr((\"\" + o[k]).length)));\n        return fmt;\n    }\n\n    /**\n     * 获取格式化后的日期（不含小时分秒）\n     */\n    public static getDay () {\n        const date = new Date();\n\n        return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate();\n    }\n\n    /**\n     * 格式化钱数，超过10000 转换位 10K   10000K 转换为 10M\n     */\n    public static formatMoney (money: number) {\n        const arrUnit = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y', 'B', 'N', 'D'];\n\n        let strValue = '';\n        for (let idx = 0; idx < arrUnit.length; idx++) {\n            if (money >= 10000) {\n                money /= 1000;\n            } else {\n                strValue = Math.floor(money) + arrUnit[idx];\n                break;\n            }\n        }\n\n        if (strValue === '') {\n            strValue = Math.floor(money) + 'U'; //超过最大值就加个U\n        }\n\n        return strValue;\n    }\n\n    /**\n     * 根据剩余秒数格式化剩余时间 返回 HH:MM:SS\n     * @param {Number} leftSec\n     */\n    public static formatTimeForSecond (leftSec: number) {\n        let timeStr = '';\n        const sec = leftSec % 60;\n\n        let leftMin = Math.floor(leftSec / 60);\n        leftMin = leftMin < 0 ? 0 : leftMin;\n\n        const hour = Math.floor(leftMin / 60);\n        const min = leftMin % 60;\n\n        if (hour > 0) {\n            timeStr += hour > 9 ? hour.toString() : '0' + hour;\n            timeStr += ':';\n        }\n\n        timeStr += min > 9 ? min.toString() : '0' + min;\n        timeStr += ':';\n        timeStr += sec > 9 ? sec.toString() : '0' + sec;\n        return timeStr;\n    }\n\n    /**\n     *  根据剩余毫秒数格式化剩余时间 返回 HH:MM:SS\n     *\n     * @param {Number} ms\n     */\n    public static formatTimeForMillisecond(ms: number) {\n        let second = Math.floor(ms / 1000 % 60);\n        let minute = Math.floor(ms / 1000 / 60 % 60);\n        let hour = Math.floor(ms / 1000 / 60 / 60);\n        let strSecond = second < 10 ? '0' + second : second;\n        let strMinute = minute < 10 ? '0' + minute : minute;\n        let strHour = hour < 10 ? '0' + hour : hour;\n        return `${strSecond}:${strMinute}:${strHour}`;\n    }\n\n    /**\n     * TODO 需要将pako进行引入，目前已经去除了压缩算法的需要，如需要使用需引入库文件\n     * 将字符串进行压缩\n     * @param {String} str\n     */\n    public static zip (str: string) {\n        const binaryString = pako.gzip(encodeURIComponent(str), { to: 'string' });\n        // @ts-ignore\n        return this.base64encode(binaryString);\n    }\n\n    public static rand(arr: any) {\n        let arrClone = this.clone(arr);\n        // 首先从最大的数开始遍历，之后递减\n        for (let i = arrClone.length - 1; i >= 0; i--) {\n            // 随机索引值randomIndex是从0-arrClone.length中随机抽取的\n            const randomIndex = Math.floor(Math.random() * (i + 1));\n            // 下面三句相当于把从数组中随机抽取到的值与当前遍历的值互换位置\n            const itemIndex = arrClone[randomIndex];\n            arrClone[randomIndex] = arrClone[i];\n            arrClone[i] = itemIndex;\n        }\n        // 每一次的遍历都相当于把从数组中随机抽取（不重复）的一个元素放到数组的最后面（索引顺序为：len-1,len-2,len-3......0）\n        return arrClone;\n    }\n}\n"]}