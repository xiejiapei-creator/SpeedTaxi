{"version":3,"sources":["file:///Users/xiejiapei/SpeedTaxi/assets/script/ui/main/flyRewardItem.ts"],"names":["_decorator","Component","Sprite","Vec3","tween","ccclass","property","flyRewardItem","targetPos","targetRotation","targetScale","posLast","_callback","start","show","imgItem","callback","set","sprite","node","addComponent","trim","sizeMode","SizeMode","RAW","spriteFrame","eulerAngles","Math","floor","random","randTargetPos","costTime","distance","to","easing","randRotation","z","call","move2Target","move2TargetTime","position","delayTime","union","repeat","scheduleOnce","update","deltaTime","setScale"],"mappings":"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","sourcesContent":["import { _decorator, Component, Sprite, Vec3, tweenUtil, SpriteFrame, tween } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"flyRewardItem\")\nexport class flyRewardItem extends Component {\n    /* class member could be defined like this */\n    // dummy = '';\n\n    /* use `property` decorator if your want the member to be serializable */\n    // @property\n    // serializableDummy = 0;\n    targetPos: Vec3 = new Vec3();\n    targetRotation: Vec3 = new Vec3(0, 0, 0);\n    targetScale: Vec3 = new Vec3(1, 1, 1);\n    posLast = new Vec3()\n    _callback: Function | null = null;\n\n    start () {\n        // Your initialization goes here.\n    }\n\n    show (imgItem: SpriteFrame, posLast: Vec3, callback: Function) {\n        this.posLast.set(posLast);\n        this._callback = callback;\n        let sprite = this.node.addComponent(Sprite);\n        sprite.trim = false;\n        sprite.sizeMode = Sprite.SizeMode.RAW;\n\n        sprite.spriteFrame = imgItem;\n\n        this.node.eulerAngles =  new Vec3(0, 0, Math.floor(Math.random()*360));\n        this.targetRotation = new Vec3(this.node.eulerAngles);\n\n        //每个去配个动作\n        // let randDegree = Math.floor(Math.random()*360);\n\n        let randTargetPos = new Vec3(Math.floor(Math.random()*300) - 150, Math.floor(Math.random()*300) - 150, 0);\n\n        let costTime = Vec3.distance(randTargetPos, new Vec3(0, 0, 0)) / 400;\n        tween(this.targetPos)\n        //    .to(costTime, randTargetPos, {easing: 'Circular-InOut'})\n            .to(costTime, randTargetPos, {easing: 'cubicInOut'})\n            .start();\n\n\n        let randRotation = 120 + Math.floor(Math.random()*60);\n        randRotation = this.targetRotation.z + Math.floor(Math.random()*2) === 1? randRotation: -randRotation;\n        tween(this.targetRotation)\n            .to(costTime, new Vec3(0, 0, randRotation))\n            .start();\n\n        tween(this.targetScale)\n            .to(costTime * 2 / 3, new Vec3(1.4, 1.4, 1.4))\n            .to(costTime / 3, new Vec3(1, 1, 1))\n            .call(()=>{\n                this.move2Target();\n            })\n            .start();\n    }\n\n    move2Target () {\n        let move2TargetTime = Vec3.distance(this.node.position, this.posLast) / 1500;\n\n        let delayTime = Math.floor(Math.random()*10) / 10; //0~1s\n        tween(this.targetScale)\n            .to(0.3, new Vec3(1.4, 1.4, 1.4))\n            .to(0.7, new Vec3(1, 1, 1)).union()\n            .repeat(50)\n            .start();\n\n        this.scheduleOnce(()=>{\n            tween(this.targetPos)\n                .to(move2TargetTime, this.posLast)\n                .call(()=>{\n                    //飞行结束\n                    this._callback && this._callback(this.node);\n                })\n                .start();\n        }, delayTime);\n\n\n    }\n\n    update (deltaTime: number) {\n        // Your update function goes here.\n        this.node.position = this.targetPos;\n\n        this.node.eulerAngles = this.targetRotation;\n\n        this.node.setScale(this.targetScale);\n    }\n}\n"]}