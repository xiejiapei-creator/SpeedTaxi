{"version":3,"sources":["file:///Users/xiejiapei/SpeedTaxi/assets/script/fight/fightMap.ts"],"names":["_decorator","Component","Node","Vec3","roadPoint","fightConstants","resourceUtil","poolManager","clientEvent","i18n","ccclass","property","fightMap","type","displayName","_progressListener","undefined","_completeListener","curProgress","maxProgress","levelProgressCnt","buildMap","jsonInfo","progressCb","completeCb","objMap","buildModel","buildPath","hasOwnProperty","triggerFinished","arrName","objPlane","idx","children","length","name","indexOf","push","dictPrefab","getMapObjs","err","arrPrefabs","console","error","prefab","data","nodeParent","parent","node","setPosition","pX","pY","pZ","child","instance","getNode","eulerAngles","rX","rY","rZ","setScale","sX","sY","sZ","path","objPathRoot","nodePathRoot","objPath","nodePath","start","createRoadPoint","objPoint","nodeRoadPoint","point","addComponent","moveType","clockwise","direction","delayTime","genInterval","carSpeed","cars","ROAD_POINT_TYPE","PLATFORM","next","log","tips","t","dispatchEvent","recycle","recycleModel","removeAllChildren","getChildByName","putNode"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, CCBoolean, Prefab } from \"cc\";\nimport { roadPoint, ROAD_MOVE_TYPE, ROAD_POINT_TYPE } from \"./roadPoint\";\nimport { fightConstants } from \"./fightConstants\";\nimport { resourceUtil } from \"../framework/resourceUtil\";\nimport { poolManager } from \"../framework/poolManager\";\nimport { clientEvent } from \"../framework/clientEvent\";\nimport { i18n } from \"../i18nMaster/runtime-scripts/LanguageData\";\nconst { ccclass, property } = _decorator;\n// import {writeFile} from 'fs';\n\ndeclare global {\n    namespace globalThis {\n        var cce: any;\n    }\n}\n\ntype ObjRoadPoint = {\n    name: string,\n    pX:number,\n    pY: number,\n    pZ: number,\n    rX: number,\n    rY: number,\n    rZ: number,\n    sX: number,\n    sY: number,\n    sZ: number,\n    type: ROAD_POINT_TYPE,\n    next: ObjRoadPoint | null,\n    moveType: ROAD_MOVE_TYPE\n    clockwise: boolean,\n    direction: Vec3,\n    delayTime: number,\n    genInterval: number,\n    carSpeed: number\n    cars: string\n};\n\ntype PathData = {\n    name: string,\n    pX: number,\n    pY: number,\n    pZ: number,\n    path: ObjRoadPoint | null,\n};\n\ntype MapPathData = {\n    name: string,\n    pX: number,\n    pY: number,\n    pZ: number,\n    children: PathData[]\n};\n\ntype MapModelData = {\n    name: string\n    pX: number,\n    pY: number,\n    pZ: number,\n    children: ModelData[];\n}\n\ntype ModelData = {\n    name: string,\n    pX: number,\n    pY: number,\n    pZ: number,\n    rX: number,\n    rY: number,\n    rZ: number,\n    sX: number,\n    sY: number,\n    sZ: number,\n    path: ObjRoadPoint,\n}\n\ntype RoadType = 'plane' | 'road' | 'tree' | 'house' | 'sign' | 'path';\n\ntype IObjMap = Record<RoadType, MapModelData | PathData>;\n\n@ccclass(\"fightMap\")\nexport class fightMap extends Component {\n    @property({type: Node, displayName: \"各路线起点\"})\n    public path: Node[] = [];\n\n    objMap!: IObjMap;\n    _progressListener: Function | undefined = undefined\n    _completeListener: Function | undefined = undefined;\n    curProgress = 0;\n    maxProgress = 0;\n\n    levelProgressCnt = 0; //关卡总进度\n\n    //构建地图\n    buildMap (jsonInfo: any, progressCb?: Function, completeCb?: Function) {\n        this._progressListener = progressCb;\n        this._completeListener = completeCb;\n        this.objMap = jsonInfo as IObjMap;\n        //构建地面\n        this.curProgress = 0;\n        this.maxProgress = 6;\n\n        this.buildModel('plane');\n        this.buildModel('road');\n        this.buildModel('tree');\n        this.buildModel('house');\n        this.buildModel('sign');\n        this.buildPath();\n    }\n\n    buildModel (type: RoadType) {\n        if (!this.objMap.hasOwnProperty(type)) {\n            //继续\n            this.triggerFinished(type);\n            return;\n        }\n\n        //搜索所需资源\n        let arrName = [];\n        let objPlane = this.objMap[type] as MapModelData;\n        for (let idx = 0; idx < objPlane.children.length; idx++) {\n            let name = objPlane.children[idx].name;\n            if (arrName.indexOf(name) === -1) {\n                arrName.push(name);\n            }\n        }\n\n        let dictPrefab: { [name: string]: Prefab } = {};\n        resourceUtil.getMapObjs(type, arrName, ()=>{}, (err, arrPrefabs)=>{\n            if (err) {\n                console.error(err);\n                return;\n            }\n\n            for (let idx = 0; idx < (arrPrefabs as Prefab[]).length; idx++) {\n                let prefab = (arrPrefabs as Prefab[])[idx];\n                dictPrefab[prefab.data.name] = prefab;\n            }\n\n            //开始创建\n            //先创建父节点\n            let nodeParent = new Node(type);\n            nodeParent.parent = this.node;\n            nodeParent.setPosition(new Vec3(objPlane.pX, objPlane.pY, objPlane.pZ));\n\n            //开始创建子节点\n            for (let idx = 0; idx < objPlane.children.length; idx++) {\n                let child = objPlane.children[idx];\n                let prefab = dictPrefab[child.name];\n                let node = poolManager.instance.getNode(prefab, nodeParent);\n                node.setPosition(child.pX, child.pY, child.pZ);\n                node.eulerAngles = new Vec3(child.rX, child.rY, child.rZ);\n                node.setScale(child.sX, child.sY, child.sZ);\n            }\n\n            this.triggerFinished(type);\n        });\n    }\n\n    buildPath () {\n        if (!this.objMap.hasOwnProperty('path')) {\n            //继续\n            return;\n        }\n\n        this.path = [];\n        this.levelProgressCnt = 0;\n        let objPathRoot = this.objMap.path as MapPathData;\n        let nodePathRoot = new Node('path');\n        nodePathRoot.parent = this.node;\n        nodePathRoot.setPosition(objPathRoot.pX, objPathRoot.pY, objPathRoot.pZ);\n\n        //开始创建各条路径\n        for (let idx = 0; idx < objPathRoot.children.length; idx++) {\n            let objPath = objPathRoot.children[idx] as PathData;\n            let nodePath = new Node(objPath.name);\n            nodePath.parent = nodePathRoot;\n            nodePath.setPosition(objPath.pX, objPath.pY, objPath.pZ);\n\n\n            //开始递归创建路径\n            let start = this.createRoadPoint(objPath.path, nodePath);\n            if (start) {\n                this.path.push(start);\n            }\n        }\n\n        this.triggerFinished('path');\n    }\n\n    createRoadPoint (objPoint: ObjRoadPoint | null, parent: Node | null) {\n        if (!objPoint) {\n            return null;\n        }\n\n        let nodeRoadPoint = new Node(objPoint.name);\n        nodeRoadPoint.parent = parent;\n        nodeRoadPoint.setPosition(objPoint.pX, objPoint.pY, objPoint.pZ);\n        nodeRoadPoint.setScale(objPoint.sX, objPoint.sY, objPoint.sZ);\n        nodeRoadPoint.eulerAngles = new Vec3(objPoint.rX, objPoint.rY, objPoint.rZ);\n        let point = nodeRoadPoint.addComponent(roadPoint);\n        point.type = objPoint.type;\n        point.moveType = objPoint.moveType;\n        point.clockwise = objPoint.clockwise;\n        point.direction = objPoint.direction;\n        point.delayTime = objPoint.delayTime;\n        point.genInterval = objPoint.genInterval;\n        point.carSpeed = objPoint.carSpeed;\n        point.cars = objPoint.cars;\n\n        if (point.type === fightConstants.ROAD_POINT_TYPE.PLATFORM) {\n            this.levelProgressCnt++;\n        }\n\n\n        if (objPoint.next) {\n            point.next = this.createRoadPoint(objPoint.next, parent);\n        }\n\n        return nodeRoadPoint;\n    }\n\n    triggerFinished(type: RoadType) {\n        console.log(`build ${type} finished!`);\n\n        let tips = '';\n        switch (type) {\n            case 'plane':\n                    tips = i18n.t('fightMap.trimTheGround');\n                break;\n            case 'road':\n                    tips = i18n.t('fightMap.pavingTheRoad');\n                break;\n            case 'tree':\n                    tips = i18n.t('fightMap.plantingTree');\n                break;\n            case 'house':\n                    tips = i18n.t('fightMap.decorateHouse');\n                break;\n            case 'sign':\n                    tips = i18n.t('fightMap.paintLandmarks');\n                break;\n        }\n\n        if (tips) {\n            clientEvent.dispatchEvent('updateLoading', 10, tips);\n        }\n\n        this.curProgress++;\n        if (this._progressListener) {\n            this._progressListener(this.curProgress, this.maxProgress);\n        }\n\n        if (this.curProgress >= this.maxProgress && this._completeListener) {\n            this._completeListener();\n        }\n    }\n\n    recycle () {\n        console.log('recycle map elements...');\n\n        this.recycleModel('plane');\n        this.recycleModel('road');\n        this.recycleModel('tree');\n        this.recycleModel('house');\n        this.recycleModel('sign');\n\n        //路径属于空节点挂脚本，直接做清除操作\n        this.node.removeAllChildren();\n    }\n\n    recycleModel(type: RoadType) {\n        let nodeParent = this.node.getChildByName(type);\n        if (!nodeParent) {\n            return;\n        }\n\n        for (let idx = 0; idx < nodeParent.children.length; idx++) {\n            let child = nodeParent.children[idx];\n            poolManager.instance.putNode(child);\n        }\n    }\n\n    // update (deltaTime: number) {\n    //     // Your update function goes here.\n    // }\n}"]}