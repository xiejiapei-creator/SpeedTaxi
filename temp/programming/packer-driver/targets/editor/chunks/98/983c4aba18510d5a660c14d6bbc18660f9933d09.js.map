{"version":3,"sources":["file:///Users/xiejiapei/NewProject_1/assets/script/ui/common/btnAdapter.ts"],"names":["_decorator","Component","Button","audioManager","ccclass","property","menu","requireComponent","disallowMultiple","btnAdapter","tooltip","start","button","node","getComponent","on","isPreventSecondClick","interactable","scheduleOnce","preventTime","isPlaySound","instance","playSound","clickSoundName"],"mappings":";;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;;AAEvBC,MAAAA,Y,iBAAAA,Y;;;;;;;OADH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAsBC,QAAAA,IAAtB;AAA4BC,QAAAA,gBAA5B;AAA8CC,QAAAA;AAA9C,O,GAAkER,U;;4BAQ3DS,U,WAJZL,OAAO,CAAC,YAAD,C,UACPE,IAAI,CAAC,kBAAD,C,UACJC,gBAAgB,CAACL,MAAD,C,UAUZG,QAAQ,CAAC;AAACK,QAAAA,OAAO,EAAE;AAAV,OAAD,C,UASRL,QAAQ,CAAC;AAAEK,QAAAA,OAAO,EAAE;AAAX,OAAD,C,UASRL,QAAQ,CAAC;AAACK,QAAAA,OAAO,EAAE;AAAV,OAAD,C,UASRL,QAAQ,CAAC;AAACK,QAAAA,OAAO,EAAE;AAAV,OAAD,C,8CApCZF,gB,qBAHD,MAIaC,UAJb,SAIgCR,SAJhC,CAI0C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAsCtCU,QAAAA,KAAK,GAAI;AACL,gBAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBZ,MAAvB,CAAf;AACA,eAAKW,IAAL,CAAUE,EAAV,CAAa,OAAb,EAAsB,MAAM;AACxB,gBAAI,KAAKC,oBAAT,EAA+B;AAC3BJ,cAAAA,MAAM,CAACK,YAAP,GAAsB,KAAtB;AACA,mBAAKC,YAAL,CAAkB,MAAM;AACpB,oBAAIN,MAAM,CAACC,IAAX,EAAiBD,MAAM,CAACK,YAAP,GAAsB,IAAtB;AACpB,eAFD,EAEG,KAAKE,WAFR;AAGH,aANuB,CASxB;;;AACA,gBAAI,KAAKC,WAAT,EAAsB;AAAA;AAAA,8CAAaC,QAAb,CAAsBC,SAAtB,CAAgC,KAAKC,cAArC,EAAqD,KAArD;AACzB,WAXD;AAYH,SApDqC,CAsDtC;;;AAtDsC,O;;;;;iBASxB,I;;;;;;;iBASG,O;;;;;;;iBASM,K;;;;;;;iBAST,C;;;;AAmBjB","sourcesContent":["\nimport { _decorator, Component, Button, Node } from \"cc\";\nconst { ccclass, property , menu, requireComponent, disallowMultiple} = _decorator;\nimport { audioManager } from \"../../framework/audioManager\";\n\n\n@ccclass(\"btnAdapter\")\n@menu('自定义组件/btnAdapter')\n@requireComponent(Button)\n@disallowMultiple\nexport class btnAdapter extends Component {\n\n    /**\n     * 点击后是否播放点击音效\n     * @property isPlaySound\n     * @type {Boolean}\n     * @default true\n     */\n    @property({tooltip: '点击后是否播放点击音效'})\n    isPlaySound = true;\n\n    /**\n     * 点击音效名\n     * @property clickSoundName\n     * @type {String}\n     * @default true\n     */\n    @property({ tooltip: '点击音效名'})\n    clickSoundName = 'click';\n\n    /**\n     * 是否禁止快速二次点击\n     * @property isPreventSecondClick\n     * @type {Boolean}\n     * @default true\n     */\n    @property({tooltip: '是否禁止快速二次点击'})\n    isPreventSecondClick = false;\n\n    /**\n     * 点击后多久才能再次点击,仅isPreventSecondClick为true生效\n     * @property preventTime\n     * @type {number}\n     * @default true\n     */\n    @property({tooltip: '点击后多久才能再次点击,仅isPreventSecondClick为true生效'})\n    preventTime = 2;\n\n    start () {\n        const button = this.node.getComponent(Button)!;\n        this.node.on('click', () => {\n            if (this.isPreventSecondClick) {\n                button.interactable = false;\n                this.scheduleOnce(() => {\n                    if (button.node) button.interactable = true;\n                }, this.preventTime);\n            }\n\n\n            //\n            if (this.isPlaySound) audioManager.instance.playSound(this.clickSoundName, false);\n        });\n    }\n\n    // update (dt) {},\n};\n"]}