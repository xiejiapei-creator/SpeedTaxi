{"version":3,"sources":["file:///Users/xiejiapei/Documents/Car/assets/script/ui/lottery/lottery.ts"],"names":["instantiate","tween","_decorator","Component","Label","Prefab","Node","Color","Button","SpriteFrame","Sprite","Vec3","uiManager","localConfig","playerData","lodash","lotteryItem","constant","clientEvent","gameLogic","configuration","ccclass","property","LOTTERY_PART","lottery","arrRewardData","arrLotteryItem","arrProbability","randValue","curRotation","_receiveCarTimes","receiveCarTimes","num","console","log","start","onEnable","on","onBuyCar","onDisable","off","initReward","show","initInfo","btnAd","node","active","arrCars","instance","getCars","arrLottery","forEach","element","hasCar","ID","type","BUY_CAR_TYPE","GOLD","push","length","arrHas","cloneDeep","playerInfo","cars","rand","Math","floor","random","carId","car","queryByID","splice","idx","arrRewardNode","parentNode","rewardItem","pfRewardItem","parent","script","getComponent","min","max","lbMoney","string","LOTTERY","MONEY","checkButton","isFree","checkIsFree","btnLottery","gold","color","lotteryBtnEnable","adBtnEnable","RED","updateRewardIcon","SHARE_FUNCTION","spAdIcon","signInInfo","currentDay","data","getGlobalData","undefined","parseInt","value","interactable","spLotteryBtn","spriteFrame","imgLotteryBtnEnable","imgLotteryBtnDisable","spAdBtn","imgAdBtnEnable","getRandValue","idxRand","probability","onBtnStartClick","addGold","startRun","onBtnAdClick","setGlobalData","openReward","err","ndBtnClose","targetRotation","nodeTurnable","eulerAngles","z","offset","randTimes","rotate","clone","to","easing","call","showReward","itemNode","onBtnCloseClick","hideDialog","update","deltaTime"],"mappings":"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","sourcesContent":["import { instantiate, tween } from 'cc';\n// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nimport { _decorator, Component, Label, Prefab, Node, Color, Button, SpriteFrame, Sprite, tweenUtil, Vec3 } from \"cc\";\nimport { uiManager } from \"../../framework/uiManager\";\nimport { localConfig } from \"../../framework/localConfig\";\nimport { playerData } from \"../../framework/playerData\";\nimport { lodash } from \"../../framework/lodash\";\nimport { lotteryItem } from \"./lotteryItem\";\nimport { constant } from \"../../framework/constant\";\nimport { clientEvent } from \"../../framework/clientEvent\";\nimport { gameLogic } from \"../../logic/gameLogic\";\nimport { configuration } from '../../framework/configuration';\nconst { ccclass, property } = _decorator;\n\nconst LOTTERY_PART = 6;\n@ccclass(\"lottery\")\nexport class lottery extends Component {\n    /* class member could be defined like this */\n    // dummy = '';\n\n    @property(Node)\n    arrRewardNode: Node[] = [];\n\n    @property(Prefab)\n    pfRewardItem: Prefab = null!;\n\n    @property(Node)\n    nodeTurnable: Node = null!;  //转盘用来旋转的\n\n    @property(Node)\n    ndBtnClose: Node = null!; //关闭按钮\n\n    @property(Button)\n    btnLottery: Button = null!;\n\n    @property(Button)\n    btnAd: Button = null!;\n\n    @property(Label)\n    lbMoney: Label = null!;\n\n    @property(SpriteFrame)\n    imgLotteryBtnDisable: SpriteFrame = null!;\n\n    @property(SpriteFrame)\n    imgLotteryBtnEnable: SpriteFrame = null!;\n\n    @property(SpriteFrame)\n    imgAdBtnEnable: SpriteFrame = null!;\n\n    @property(Sprite)\n    spLotteryBtn: Sprite = null!;\n\n    @property(Sprite)\n    spAdIcon: Sprite = null!;\n\n    @property(Sprite)\n    spAdBtn: Sprite = null!;\n\n    arrRewardData: any[] = [];\n\n    arrLotteryItem: Node[] = [];\n    arrProbability: any[] = [];\n    randValue: number = 0;\n\n    curRotation: Vec3 | null = null;\n\n    _receiveCarTimes: number = 0;//获取车的次数\n\n    set receiveCarTimes(num: number) {\n        console.log(\"#####receiveCarTimes\", num);\n        this._receiveCarTimes = num;\n    }\n\n    get receiveCarTimes() {\n        return this._receiveCarTimes;\n    }\n\n    start () {\n        // Your initialization goes here.\n\n    }\n\n    onEnable() {\n        clientEvent.on('buyCar', this.onBuyCar, this);\n    }\n\n    onDisable() {\n        clientEvent.off('buyCar', this.onBuyCar, this);\n    }\n\n    onBuyCar () {\n        this.initReward();//更新下奖励界面\n    }\n\n    show () {\n        this.initReward();\n        this.initInfo();\n\n        this.btnAd.node.active = true;\n    }\n\n    initReward () {\n        let arrCars = localConfig.instance.getCars(); //获得所有车\n        let arrLottery = [];\n        arrCars.forEach(element => {\n            if (!playerData.instance.hasCar(element.ID) && element.type === constant.BUY_CAR_TYPE.GOLD) {\n                //未拥有的车辆，加入抽奖列表\n                arrLottery.push(element.ID);\n            }\n        });\n\n        if (arrLottery.length < 6) {\n            //不足6辆，从已有的车辆中获得\n            let arrHas = lodash.cloneDeep(playerData.instance.playerInfo.cars) as any[];\n\n            while(arrLottery.length < 6) {\n                //凑足6辆\n                let rand = Math.floor(Math.random() * arrHas.length);\n                let carId = arrHas[rand];\n                let car = localConfig.instance.queryByID('car', carId);\n                if (car.type === constant.BUY_CAR_TYPE.GOLD) {\n                    arrLottery.push(arrHas.splice(rand, 1)[0]);\n                }\n            }\n        }\n\n        this.arrRewardData = arrLottery;\n\n        this.arrProbability = [];\n        let start = 0;\n        for (let idx = 0; idx < this.arrRewardNode.length; idx++) {\n            let parentNode = this.arrRewardNode[idx];\n            let rewardItem = this.arrLotteryItem[idx];\n            if (!rewardItem) {\n                rewardItem = instantiate(this.pfRewardItem);\n                rewardItem.parent = parentNode;\n                this.arrLotteryItem[idx] = rewardItem;\n            }\n\n            if (this.arrRewardData.length > idx) {\n                let car = this.arrRewardData[idx];\n\n                let script = rewardItem.getComponent(lotteryItem)!;\n                script.show(car);\n\n                let min = start;\n                let max = start + 100 / LOTTERY_PART;  //平均概率\n                this.arrProbability.push({min: min, max: max, idx: idx});\n\n                start = max;\n            }\n        }\n    }\n\n    initInfo () {\n        this.lbMoney.string = '' + constant.LOTTERY.MONEY;\n\n        this.checkButton();\n    }\n\n    checkButton () {\n        const isFree = this.checkIsFree();\n        this.btnAd.node.active = isFree;\n        this.btnLottery.node.active = !isFree;\n        if (isFree) {\n            return;\n        }\n\n        if (playerData.instance.playerInfo.gold > constant.LOTTERY.MONEY) {\n            this.lbMoney.color = new Color(163, 64, 27);\n            this.lotteryBtnEnable = true;\n            this.adBtnEnable = false;\n        } else {\n            this.lbMoney.color = Color.RED;\n            this.lotteryBtnEnable = false;\n            this.adBtnEnable = true;\n        }\n\n        gameLogic.updateRewardIcon(constant.SHARE_FUNCTION.LOTTERY, this.spAdIcon, ()=>{\n\n        });\n    }\n\n    checkIsFree() {\n        let signInInfo = playerData.instance.playerInfo.signInInfo;\n        const currentDay = signInInfo.currentDay;\n        const data =  configuration.instance.getGlobalData('rewardDays');\n        const isFree = data === undefined || parseInt(data) < currentDay ? true : false;\n        return isFree;\n    }\n\n    set lotteryBtnEnable (value: boolean) {\n        if (value) {\n            this.btnLottery.interactable =  true;\n            this.spLotteryBtn.spriteFrame = this.imgLotteryBtnEnable;\n        } else {\n            this.btnLottery.interactable =  false;\n            this.spLotteryBtn.spriteFrame = this.imgLotteryBtnDisable;\n        }\n    }\n\n    set adBtnEnable (value: boolean) {\n        if (value) {\n            this.btnAd.interactable =  true;\n            this.spAdBtn.spriteFrame = this.imgAdBtnEnable;\n        } else {\n            this.btnAd.interactable =  false;\n            this.spAdBtn.spriteFrame = this.imgLotteryBtnDisable;\n        }\n    }\n\n    getRandValue () {\n        let idxRand = -1;\n        while(idxRand === -1){\n            let rand = Math.floor(Math.random() * 100);\n            for (let idx = 0; idx < this.arrProbability.length; idx++) {\n                let probability = this.arrProbability[idx];\n\n                if (rand >= probability.min && rand < probability.max) {\n                    idxRand = probability.idx;\n                    break;\n                }\n            }\n        }\n\n        return idxRand;\n    }\n\n    onBtnStartClick () {\n        //扣除对应金币\n        gameLogic.addGold(-constant.LOTTERY.MONEY);     //每抽一次扣一次\n\n        this.startRun();\n    }\n\n    onBtnAdClick () {\n        const data =  configuration.instance.getGlobalData('rewardDays');\n        configuration.instance.setGlobalData('rewardDays', `${!data ? 0 : parseInt(data) + 1}`);\n        gameLogic.openReward(constant.SHARE_FUNCTION.LOTTERY, (err)=>{\n            if (!err) {\n                this.startRun();\n            }\n        });\n    }\n\n    startRun () {\n        this.lotteryBtnEnable = false;\n        this.adBtnEnable = false;\n        this.ndBtnClose.getComponent(Button)!.interactable = false;\n\n        //随机抽奖结果\n        this.randValue = this.getRandValue();\n\n        //开始旋转\n        //先开始第一轮，根据当前度数，将其旋转至360度\n        let targetRotation = -360;\n        let curRotation = this.nodeTurnable.eulerAngles.z % 360;\n        this.nodeTurnable.eulerAngles = new Vec3(0, 0, curRotation);\n        let offset = 360 - curRotation;\n\n        let randTimes = 3 + Math.floor(Math.random() * 4);\n        let rotate = targetRotation - randTimes * 360 + this.randValue * 60 + 30 - 360;\n\n        this.curRotation = this.nodeTurnable.eulerAngles.clone();\n        tween(this.curRotation)\n        // .to(offset/360 + randTimes * 0.5, new Vec3(0, 0, rotate), { easing: 'Circular-Out'})\n        .to(offset/360 + randTimes * 0.5, new Vec3(0, 0, rotate), { easing: 'cubicOut'})\n        .call(()=>{\n            this.curRotation = null;\n            this.showReward();\n        })\n        .start();\n\n        // this.nodeTurnable.eulerAngles = new Vec3(0, 0, rotate);\n    }\n\n    showReward () {\n        this.ndBtnClose.getComponent(Button)!.interactable = true;\n        let itemNode = this.arrLotteryItem[this.randValue];\n        let lottery = itemNode.getComponent(lotteryItem)!;\n\n        lottery.showReward(this);\n\n        this.checkButton();\n    }\n\n    onBtnCloseClick () {\n        // cc.gameSpace.audioManager.playSound('click', false);\n\n        uiManager.instance.hideDialog('lottery/lottery');\n    }\n\n    update (deltaTime: number) {\n        // Your update function goes here.\n        if (this.curRotation) {\n            this.nodeTurnable.eulerAngles = this.curRotation;\n        }\n    }\n}\n"]}