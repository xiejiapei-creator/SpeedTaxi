{"version":3,"sources":["file:///Users/xiejiapei/Documents/Car/assets/script/fight/car.ts"],"names":["_decorator","Component","Vec3","Node","Collider","RigidBody","instantiate","ParticleSystem","ERigidBodyType","fightConstants","clientEvent","audioManager","constant","resourceUtil","poolManager","ccclass","property","TOOTING_COOL_TIME","car","displayName","isMoving","value","_isMoving","updateBackLight","isHosting","_isHosting","isInvincible","isShow","_isInvincible","nodeInvincible","active","getEffect","err","prefab","console","error","parent","node","destroy","constructor","_minSpeed","_maxSpeed","manager","isMain","currentSpeed","accelerate","originRotation","targetRotation","curRoadPoint","circleCenterPoint","quarter","_nodeGasInst","entry","forward","posTarget","posSrc","_callback","isOver","curProgress","maxProgress","hasCustomer","lastPos","lastRotation","isBraking","arrTyres","curTyreRotation","nodeCarBackLight","tootingCoolTime","isCarMoving","invincibleRotation","start","minSpeed","maxSpeed","tyre1","getChildByPath","gas","instance","getNode","nodeGas","getComponent","setPosition","markMainCar","rigidBody","collider","off","onCollisionEnter","setGroup","CAR_GROUP","MAIN_CAR","setMask","OTHER_CAR","type","KINEMATIC","on","DYNAMIC","setEntry","reset","event","otherCollider","name","nodeEnemy","selfCollider","enemyRigidBody","useGravity","applyForce","playSound","AUDIO_SOUND","CRASH","worldPosition","eulerAngles","enabled","scheduleOnce","revive","putNode","NORMAL","dispatchEvent","startRunning","play","startWithMinSpeed","stopRunning","isInit","stopImmediately","setMoveOverListener","callback","resetPhysical","sleep","wakeUp","log","x","z","setWorldPosition","stop","set","next","y","greeting","direction","takeCustomer","arrivalPoint","moveType","ROAD_MOVE_TYPE","BEND","ZERO","ROAD_POINT_TYPE","GREETING","PLATFORM","END","moveAfterFinished","clockwise","r","subtract","length","Math","PI","update","deltaTime","equals","rotation","idx","tyre","LINE","offset","normalize","multiplyScalar","pos","add","offsetRotation","curRotation","percent","abs","nextRotation","target","posCur","rotateY","lengthSqr","tooting","audio","floor","random","TOOTING1","TOOTING2"],"mappings":"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","sourcesContent":["import { _decorator, Component, Vec3, Node, Collider, RigidBody, ICollisionEvent, instantiate, ParticleSystem, ERigidBodyType } from \"cc\";\nimport { roadPoint } from \"./roadPoint\";\nimport { fightConstants } from \"./fightConstants\";\nimport { customerManager } from \"./customerManager\";\nimport { clientEvent } from \"../framework/clientEvent\";\nimport { audioManager } from \"../framework/audioManager\";\nimport { constant } from \"../framework/constant\";\nimport { resourceUtil } from \"../framework/resourceUtil\";\nimport { poolManager } from \"../framework/poolManager\";\nconst { ccclass, property } = _decorator;\n\nconst TOOTING_COOL_TIME = 5;   //5s后才会再次鸣笛\n\n@ccclass(\"car\")\nexport class car extends Component {\n    set isMoving (value) {\n        this._isMoving = value;\n\n        this.updateBackLight();\n    }\n\n    get isMoving () {\n        return this._isMoving;\n    }\n\n    _isMoving = false;\n    @property({displayName: '最大移动速度'})\n    public maxSpeed = 2;\n\n    @property({displayName: '最小移动速度'})\n    minSpeed = 0.2;\n\n    @property(Node)\n    nodeGas: Node = null!; //尾气\n\n    _minSpeed = -1;//用来做存储\n    _maxSpeed = -1;  //用来存储\n\n    public manager: customerManager | null = null;\n    public isMain = false;\n\n    currentSpeed = 0;\n    accelerate = 2;\n    originRotation = 0;\n    targetRotation = 0;\n    curRoadPoint: roadPoint | null = null;\n    circleCenterPoint = new Vec3();\n    quarter = 0;\n\n    _nodeGasInst: ParticleSystem | null = null;\n\n    entry: Node | null = null;\n\n    forward: Vec3 = new Vec3(0, 0, -1);\n    posTarget: Vec3 = new Vec3();\n    posSrc = new Vec3();\n    _callback: Function | null = null;\n\n    isOver = false;\n    curProgress = 0;\n    maxProgress = 0;\n    hasCustomer = false;\n    lastPos = new Vec3();\n    lastRotation = new Vec3();\n\n    isBraking = false;\n    arrTyres: any = [];\n    curTyreRotation = 0;\n    nodeCarBackLight: Node | null = null; //车尾灯\n    tootingCoolTime = 0;           //喇叭声的冷却时间\n\n    isCarMoving = false; //每帧检测车辆是否在移动中\n\n    nodeInvincible: Node | null = null;    //无敌特效\n\n    //是否正在接客\n    set isHosting (value) {\n        this._isHosting = value;\n\n        this.updateBackLight();\n    }\n\n    get isHosting () {\n        return this._isHosting;\n    }\n\n    _isHosting = false;\n\n    _isInvincible = false; //是否处于无敌状态\n\n    invincibleRotation = 0;\n\n    set isInvincible (isShow) {\n        this._isInvincible = isShow;\n\n        if (isShow) {\n            if (this.nodeInvincible) {\n                //已经存在该特效\n                this.nodeInvincible.active = true;\n                return;\n            } else {\n                resourceUtil.getEffect('shield', (err, prefab)=>{\n                    if (err) {\n                        console.error(err);\n                        return;\n                    }\n\n                    this.nodeInvincible = instantiate(prefab);\n                    this.nodeInvincible.parent = this.node;\n                });\n            }\n        } else {\n            if (this.nodeInvincible) {\n                this.nodeInvincible.destroy();\n                this.nodeInvincible = null;\n            }\n        }\n    }\n\n    get isInvincible () {\n        return this._isInvincible;\n    }\n\n    constructor() {\n        super();\n    }\n\n    public start() {\n        // Your initialization goes here.\n        this._minSpeed = this.minSpeed;\n        this._maxSpeed = this.maxSpeed;\n\n        let tyre1 = this.node.getChildByPath('RootNode/tyre1');\n        if (tyre1) {\n            this.arrTyres = [\n                tyre1,\n                this.node.getChildByPath('RootNode/tyre2'),\n                this.node.getChildByPath('RootNode/tyre3'),\n                this.node.getChildByPath('RootNode/tyre4'),\n            ]\n\n            this.nodeCarBackLight = this.node.getChildByPath('RootNode/light1');\n        }\n\n        //异步加载尾气,不需要每个都去创建一个\n        resourceUtil.getEffect('gas', (err, prefab)=>{\n            if (err) {\n                return;\n            }\n\n            const gas = poolManager.instance.getNode(prefab, this.nodeGas) as Node;\n            this._nodeGasInst = gas.getComponent(ParticleSystem)!;\n            gas.setPosition(new Vec3(0, 0, 0));\n        });\n    }\n\n    /**\n     * 标记为主车\n     */\n    markMainCar (isMain: boolean) {\n        this.isMain = isMain;\n\n        let rigidBody = this.node.getComponent(RigidBody) as RigidBody;\n        let collider = this.node.getComponent(Collider)!;\n\n        collider.off(\"onCollisionEnter\", this.onCollisionEnter, this);\n        if (isMain) {\n            rigidBody.setGroup(fightConstants.CAR_GROUP.MAIN_CAR);\n            rigidBody.setMask(fightConstants.CAR_GROUP.OTHER_CAR);\n            rigidBody.type = ERigidBodyType.KINEMATIC;\n\n            collider.on(\"onCollisionEnter\", this.onCollisionEnter, this);\n        } else {\n            rigidBody.setGroup(fightConstants.CAR_GROUP.OTHER_CAR);\n            rigidBody.setMask(-1);\n            rigidBody.type = ERigidBodyType.DYNAMIC;\n        }\n    }\n\n    setEntry (entry: Node) {\n        this.entry = entry;\n\n        this.reset();\n    }\n\n    onCollisionEnter (event: ICollisionEvent) {\n        if (!this.isMain) {\n            return;\n        }\n\n        if (event.otherCollider.node.name === 'ground') {\n            return;\n        }\n\n        let nodeEnemy = event.otherCollider.node;\n        if (event.otherCollider.node === this.node) {\n            nodeEnemy = event.selfCollider.node;\n        }\n\n\n        let car = nodeEnemy.getComponent('car') as car;\n        if (!car.isOver) {\n            car.isOver = true;//标准这辆车出车祸了\n            let enemyRigidBody = nodeEnemy.getComponent(RigidBody)!;\n            enemyRigidBody.useGravity = true;\n            if (!this.isInvincible) {\n                enemyRigidBody.applyForce(new Vec3(0, 1500, -3000), new Vec3(0, 0.5, 0));\n            } else {\n                enemyRigidBody.applyForce(new Vec3(0, 10000, -3000), new Vec3(0, 0.5, 0));\n            }\n        }\n\n        if (this.isOver) {\n            return;\n        }\n\n        audioManager.instance.playSound(constant.AUDIO_SOUND.CRASH);\n\n        let rigidBody = this.node.getComponent(RigidBody);\n        if (this.isInvincible) {\n            this.lastPos = this.node.worldPosition;\n            this.lastRotation = this.node.eulerAngles;\n\n            rigidBody.enabled = false;\n            //将物理引擎中的速度置为0\n            this.scheduleOnce(()=>{\n                this.isInvincible = false;\n                rigidBody.enabled = true;\n\n                 //修复无敌状态时撞到AI小车导致bug\n                this.revive();\n                this.currentSpeed = this._minSpeed;\n            }, 0.1);\n\n            this.scheduleOnce(()=>{\n                poolManager.instance.putNode(nodeEnemy);\n            }, 0.3);\n\n            return;\n        }\n\n        //发生碰撞，游戏结束，记录下最后的车辆信息\n        this.lastPos = this.node.worldPosition;\n        this.lastRotation = this.node.eulerAngles;\n\n        this.isOver = true;\n\n        // rigidBody.useGravity = true;\n\n        rigidBody.setGroup(fightConstants.CAR_GROUP.MAIN_CAR);\n        rigidBody.setMask(fightConstants.CAR_GROUP.OTHER_CAR | fightConstants.CAR_GROUP.NORMAL);\n\n\n        clientEvent.dispatchEvent('gameOver', false);\n    }\n\n    updateBackLight () {\n        if (this.nodeCarBackLight) {\n            this.nodeCarBackLight.active = !this.isMoving || this.isHosting;\n        }\n    }\n\n\n    public startRunning () {\n        if (this.isOver) {\n            return;\n        }\n\n        this.isMoving = true;\n\n        this.accelerate = 0.4;\n\n        if (this._nodeGasInst) {\n            this._nodeGasInst.play();\n        }\n\n        if (this.isBraking) {\n            clientEvent.dispatchEvent('endBraking');\n            this.isBraking = false;\n        }\n    }\n\n    public startWithMinSpeed () {\n        this.currentSpeed = this.minSpeed;\n        this.stopRunning(true);\n\n        if (this._nodeGasInst) {\n            this._nodeGasInst.play();\n        }\n\n        // if (this.isMain) {\n        //     this.isInvincible = true;\n        // }\n    }\n\n    public stopRunning (isInit?: boolean) {\n        if (this.isOver) {\n            return;\n        }\n\n        this.isMoving = false;\n\n        this.accelerate = -0.15;\n        if (!this.isBraking && !isInit) {\n            clientEvent.dispatchEvent('startBraking');\n            this.isBraking = true;\n        }\n    }\n\n    public stopImmediately () {\n        this.isMoving = false;\n        this.currentSpeed = 0;\n    }\n\n    public setMoveOverListener(callback: (...args: any[]) => void) {\n        this._callback = callback;\n    }\n\n    public resetPhysical () {\n        this.isOver = false;\n        if (this.isMain) {\n            this.markMainCar(true);\n        }\n\n        //初始化物理引擎相关信息\n        let rigidBody = this.node.getComponent(RigidBody)!;\n        rigidBody.useGravity = false;\n        //将物理引擎中的速度置为0\n        rigidBody.sleep();\n        rigidBody.wakeUp();\n    }\n\n    public revive () {\n        //复活\n        this.resetPhysical();\n\n        console.log(\"revive pos \", this.lastPos);\n\n        let lastPos = new Vec3(this.lastPos.x, 0, this.lastPos.z);\n\n        this.node.setWorldPosition(lastPos);\n\n        this.node.eulerAngles = this.lastRotation;\n\n        this.isMoving = false;\n        this.currentSpeed = 0;\n    }\n\n    public reset () {\n        //获得对应路径，但目前我们只做了主路的，所以先用主路线,主路线默认索引为0\n        this.resetPhysical();\n\n        if (this.isMain) {\n            this.curProgress = 0;\n            this.hasCustomer = false;\n\n            if (this._nodeGasInst) {\n                this._nodeGasInst.stop();\n            }\n\n            this.isInvincible = false;\n        }\n\n        this.tootingCoolTime = 0;\n        this.curRoadPoint = this.entry!.getComponent('roadPoint') as roadPoint;\n        this.posSrc.set(this.entry!.worldPosition);\n        this.posTarget.set(this.curRoadPoint.next!.worldPosition);\n\n        //初始化位置\n        this.node.setWorldPosition(this.entry!.worldPosition);\n\n        //初始化旋转角度\n        if (this.posTarget.z !== this.posSrc.z) {\n            if (this.posTarget.z < this.posSrc.z) {\n                //向上\n                this.node.eulerAngles = new Vec3(0, 360, 0);\n            } else {\n                //向下\n                this.node.eulerAngles = new Vec3(0, 180, 0);\n            }\n        } else {\n            if (this.posTarget.x > this.posSrc.x) {\n                //向上\n                this.node.eulerAngles = new Vec3(0, 270, 0);\n            } else {\n                //向下\n                this.node.eulerAngles = new Vec3(0, 90, 0);\n            }\n        }\n\n        this.originRotation = this.node.eulerAngles.y;\n        this.targetRotation = this.originRotation;\n\n        this.isMoving = false;\n        this.isHosting = false;\n        this.currentSpeed = 0;\n\n        if (this._minSpeed > 0) {\n            this.minSpeed = this._minSpeed;\n            this.maxSpeed = this._maxSpeed;\n        }\n\n    }\n\n    /**\n     * 接客\n     */\n    public greeting () {\n        this.isHosting = true;\n\n        this.curProgress++;\n        this.hasCustomer = true;\n\n        clientEvent.dispatchEvent('greetingCustomer');\n\n        //随机个乘客给它\n        this.manager!.greeting(this.node.worldPosition, this.curRoadPoint!.direction, ()=>{\n            this.isMoving = false;\n            this.currentSpeed = 0;\n            this.isHosting = false;\n\n            clientEvent.dispatchEvent('showGuide', true);\n        });\n    }\n\n    /**\n     * 送客\n     */\n    public takeCustomer () {\n        this.isHosting = true;\n\n        this.hasCustomer = false;\n\n        clientEvent.dispatchEvent('takeCustomer');\n\n        //送客\n        this.manager!.takeCustomer(this.node.worldPosition, this.curRoadPoint!.direction, this.curProgress === this.maxProgress, ()=>{\n            this.isMoving = false;\n            this.currentSpeed = 0;\n            this.isHosting = false;\n\n            clientEvent.dispatchEvent('showGuide', true);\n        })\n    }\n\n    public arrivalPoint () {\n        this.node.setWorldPosition(this.posTarget);\n\n        if (this.curRoadPoint!.moveType === fightConstants.ROAD_MOVE_TYPE.BEND) {\n            //如果是曲线，则需要将其旋转角度转正\n            this.node.eulerAngles = new Vec3(0, this.targetRotation, 0);\n        }\n\n\n        //切换至下一个目标点\n        this.posSrc.set(this.posTarget);\n        this.posTarget.set(Vec3.ZERO);\n        if (this.curRoadPoint!.next) {\n            this.curRoadPoint = this.curRoadPoint!.next.getComponent('roadPoint') as roadPoint;\n\n            //todo 切换新的点，看是否是接客或者下客\n            if (this.isMain) {\n                if (this.curRoadPoint.type === fightConstants.ROAD_POINT_TYPE.GREETING) {\n                    this.greeting();\n                } else if (this.curRoadPoint.type === fightConstants.ROAD_POINT_TYPE.PLATFORM) {\n                    this.takeCustomer();\n                } else if (this.curRoadPoint.type === fightConstants.ROAD_POINT_TYPE.END) {\n                    //结束点，触发下\n                    clientEvent.dispatchEvent('gameOver', true);\n                    this.moveAfterFinished();\n                }\n            }\n\n            if (this.curRoadPoint.next) {\n                this.posTarget.set(this.curRoadPoint.next.worldPosition);\n            } else {\n                //表示没有接下来的点，执行结束了\n                this._callback && this._callback(this);//行走完后回调\n            }\n\n            this.originRotation = this.node.eulerAngles.y;\n            this.targetRotation = this.originRotation;\n\n            if (this.curRoadPoint.moveType === fightConstants.ROAD_MOVE_TYPE.BEND) {\n                //属于转弯的\n                //确定下半圆的中间点\n                if (this.curRoadPoint.clockwise) {\n                    //顺时针 -90\n                    this.originRotation = this.originRotation <= 0 ? 360 + this.originRotation : this.originRotation;\n                    this.targetRotation = this.originRotation - 90;\n                    //顺时针旋转\n                    if ((this.posTarget.x > this.posSrc.x && this.posTarget.z < this.posSrc.z) ||\n                    (this.posTarget.x < this.posSrc.x && this.posTarget.z > this.posSrc.z)) {\n                        //第一区域与第三区域\n                        this.circleCenterPoint = new Vec3(this.posTarget.x, 0, this.posSrc.z);\n                    } else {\n                        this.circleCenterPoint = new Vec3(this.posSrc.x, 0, this.posTarget.z);\n                    }\n\n                    let r = Vec3.subtract(new Vec3(),this.circleCenterPoint, this.posSrc).length();\n                    // this.circleCenterPoint.sub(this.posSrc).mag();\n                    this.quarter = 90 / (Math.PI * r / 2); //相当于1米需要旋转多少度\n                } else {\n                    this.originRotation = this.originRotation >= 360 ? this.originRotation - 360 : this.originRotation;\n                    this.targetRotation = this.originRotation + 90;\n\n                    //逆时针旋转\n                    if ((this.posTarget.x > this.posSrc.x && this.posTarget.z < this.posSrc.z) ||\n                    (this.posTarget.x < this.posSrc.x && this.posTarget.z > this.posSrc.z)) {\n                        //第一区域与第三区域\n                        this.circleCenterPoint = new Vec3(this.posSrc.x, 0, this.posTarget.z);\n                    } else {\n                        this.circleCenterPoint = new Vec3(this.posTarget.x, 0, this.posSrc.z);\n                    }\n\n                    let r = Vec3.subtract(new Vec3(),this.circleCenterPoint, this.posSrc).length();\n                    this.quarter = 90 / (Math.PI * r / 2); //相当于1米需要旋转多少度\n                }\n\n                //将旋转角度重置为正常角度\n                this.node.eulerAngles = new Vec3(0, this.originRotation, 0);\n\n                // this.circleCenterPoint = Vec3(this.posTarget.x,\n            }\n\n        } else {\n            this.curRoadPoint = null;\n\n            this._callback && this._callback(this);//行走完后回调\n        }\n\n    }\n\n    public update(deltaTime: number) {\n        //无敌特效相关\n        if (this.nodeInvincible) {\n            this.invincibleRotation += deltaTime * 200; //每帧转动多少\n            if (this.invincibleRotation > 360) {\n                this.invincibleRotation -= 360;\n            }\n\n            this.nodeInvincible.eulerAngles = new Vec3(this.invincibleRotation, 0, 0);\n        }\n\n        //喇叭\n        if (this.tootingCoolTime > 0) {\n            this.tootingCoolTime = this.tootingCoolTime > deltaTime ? this.tootingCoolTime - deltaTime : 0;\n        }\n\n        //车辆移动相关\n        if ((!this.isMoving && this.currentSpeed < 0.01) || this.posTarget.equals(Vec3.ZERO) || this.isHosting || this.isOver) {\n            this.isCarMoving = false;\n            return;\n        }\n\n        this.isCarMoving = true;\n        this.currentSpeed += this.accelerate * deltaTime;\n        this.currentSpeed = this.currentSpeed > this.maxSpeed ? this.maxSpeed : this.currentSpeed;\n        if (this.currentSpeed < this.minSpeed) {\n            this.currentSpeed = this.minSpeed;\n            if (this.isBraking) {\n                clientEvent.dispatchEvent('endBraking');\n                this.isBraking = false;\n            }\n        }\n\n        if (this.arrTyres.length > 0) {\n            this.curTyreRotation -= this.currentSpeed * 200;\n            if (this.curTyreRotation < -360) {\n                this.curTyreRotation += 360;\n            }\n\n            let rotation = new Vec3(this.curTyreRotation, 0);\n            for (let idx = 0; idx < this.arrTyres.length; idx++) {\n                let tyre = this.arrTyres[idx] as Node;\n                tyre.eulerAngles = rotation;\n            }\n        }\n\n\n        switch (this.curRoadPoint!.moveType) {\n            case fightConstants.ROAD_MOVE_TYPE.LINE:\n                let offset = new Vec3();\n                Vec3.subtract(offset, this.posTarget, this.node.worldPosition);\n                offset.normalize();\n\n                Vec3.multiplyScalar(offset, offset, this.currentSpeed);\n                let pos = this.node.worldPosition;\n                offset.add(pos);\n\n                if (this.posTarget.z !== this.posSrc.z) {\n                    if (this.posTarget.z < this.posSrc.z) {\n                        //向上\n                        this.node.eulerAngles = new Vec3(0, 360, 0);\n\n                        if (offset.z < this.posTarget.z) {\n                            offset.z = this.posTarget.z;\n                        }\n\n                    } else {\n                        //向下\n                        this.node.eulerAngles = new Vec3(0, 180, 0);\n\n                        if (offset.z > this.posTarget.z) {\n                            offset.z = this.posTarget.z;\n                        }\n                    }\n                } else {\n                    if (this.posTarget.x > this.posSrc.x) {\n                        //向上\n                        this.node.eulerAngles = new Vec3(0, 270, 0);\n\n                        if (offset.x > this.posTarget.x) {\n                            offset.x = this.posTarget.x;\n                        }\n                    } else {\n                        //向下\n                        this.node.eulerAngles = new Vec3(0, 90, 0);\n\n                        if (offset.x < this.posTarget.x) {\n                            offset.x = this.posTarget.x;\n                        }\n                    }\n                }\n\n                // this.node.eulerAngles = offset;\n\n\n                this.node.setWorldPosition(offset);\n\n                break;\n            case fightConstants.ROAD_MOVE_TYPE.BEND:\n                //进行圆角计算\n                let offsetRotation = this.targetRotation - this.originRotation;\n                let curRotation = this.node.eulerAngles.y < 0 ? 360 + this.node.eulerAngles.y : this.node.eulerAngles.y;\n                if (this.node.eulerAngles.y > 360) {\n                    curRotation = this.node.eulerAngles.y - 360;\n                }\n                let percent = Math.abs((curRotation - this.originRotation) / offsetRotation);\n\n                let nextRotation = offsetRotation * percent + (this.currentSpeed * this.quarter * (this.targetRotation > this.originRotation ? 1 : -1) );\n                if (Math.abs(offsetRotation) < Math.abs(nextRotation)) {\n                    nextRotation = offsetRotation;\n                }\n\n                let target = this.originRotation + nextRotation;\n\n\n                let posCur = Vec3.rotateY(new Vec3(), this.posSrc, this.circleCenterPoint, nextRotation* Math.PI/180);\n\n                this.node.setWorldPosition(posCur);\n                this.node.eulerAngles = new Vec3(0, target, 0);\n                break;\n        }\n\n        if (Vec3.subtract(new Vec3(), this.posTarget, this.node.worldPosition).lengthSqr() < 0.001) {\n            //到达目标点\n            this.arrivalPoint();\n        }\n    }\n\n    public moveAfterFinished () {\n        this.isMoving = true;\n        this.minSpeed = 0.2;\n        this.maxSpeed = 0.2;\n        this.startRunning();\n    }\n\n    public tooting () {\n        if (this.tootingCoolTime > 0) {\n            return;\n        }\n\n        this.tootingCoolTime = TOOTING_COOL_TIME; //设置为最大时间\n\n        //随机个音效播放\n        let audio = Math.floor(Math.random() * 2) === 1 ? constant.AUDIO_SOUND.TOOTING1:constant.AUDIO_SOUND.TOOTING2;\n        audioManager.instance.playSound(audio);\n    }\n}\n"]}