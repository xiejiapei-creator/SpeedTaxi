{"version":3,"sources":["file:///Users/xiejiapei/NewProject_1/assets/script/framework/audioManager.ts"],"names":["audioManager","AudioClip","assert","clamp01","warn","configuration","resourceUtil","soundVolume","instance","_instance","init","audioSource","getConfiguration","_audioSource","isMusic","state","getGlobalData","undefined","playMusic","loop","playing","play","playSound","name","path","loadRes","err","clip","playOneShot","volume","setMusicVolume","flag","setSoundVolume","openMusic","setGlobalData","closeMusic","openSound","closeSound"],"mappings":"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","sourcesContent":["import { _decorator, AudioClip, sys, AudioSource, assert, clamp01, warn } from \"cc\";\nimport { configuration } from \"./configuration\";\nimport { resourceUtil } from \"./resourceUtil\";\nimport { lodash } from \"./lodash\";\n\nexport class audioManager {\n    private static _instance: audioManager;\n    private static _audioSource?: AudioSource;\n\n    static get instance () {\n        if (this._instance) {\n            return this._instance;\n        }\n\n        this._instance = new audioManager();\n        return this._instance;\n    }\n\n    soundVolume: number = 1;\n\n    // init AudioManager in GameRoot.\n    init (audioSource: AudioSource) {\n        this.soundVolume = this.getConfiguration(false) ? 1 : 0;\n\n        audioManager._audioSource = audioSource;\n    }\n\n      getConfiguration (isMusic: boolean) {\n        let state;\n        if (isMusic) {\n            state = configuration.instance.getGlobalData('music');\n        } else {\n            state = configuration.instance.getGlobalData('sound');\n        }\n\n        // console.log('Config for [' + (isMusic ? 'Music' : 'Sound') + '] is ' + state);\n\n        return state === undefined || state === 'true' ? true : false;\n    }\n\n    /**\n     * 播放音乐\n     * @param {String} name 音乐名称可通过constants.AUDIO_MUSIC 获取\n     * @param {Boolean} loop 是否循环播放\n     */\n    playMusic (loop: boolean) {\n        const audioSource = audioManager._audioSource!;\n        assert(audioSource, 'AudioManager not inited!');\n\n        audioSource.loop = loop;\n        if (!audioSource.playing) {\n            audioSource.play();\n        }\n    }\n\n    /**\n     * 播放音效\n     * @param {String} name 音效名称可通过constants.AUDIO_SOUND 获取\n     */\n    playSound (name:string) {\n        const audioSource = audioManager._audioSource!;\n        assert(audioSource, 'AudioManager not inited!');\n\n        //音效一般是多个的，不会只有一个\n        let path = 'gamePackage/audio/sound/';\n        // if (name !== 'click') {\n        //     path = 'gamePackage/' + path; //微信特殊处理，除一开场的音乐，其余的放在子包里头\n        // }\n\n        resourceUtil.loadRes(path + name, AudioClip, (err, clip)=> {\n            if (err) {\n                warn('load audioClip failed: ', err);\n                return;\n            }\n\n            // NOTE: the second parameter is volume scale.\n            audioSource.playOneShot(clip, audioSource.volume ? this.soundVolume / audioSource.volume : 0);\n        });\n\n    }\n\n    setMusicVolume (flag: number) {\n        const audioSource = audioManager._audioSource!;\n        assert(audioSource, 'AudioManager not inited!');\n\n        flag = clamp01(flag);\n        audioSource.volume = flag;\n    }\n\n    setSoundVolume (flag: number) {\n        this.soundVolume = flag;\n    }\n\n    openMusic () {\n        this.setMusicVolume(0.8);\n        configuration.instance.setGlobalData('music', 'true');\n    }\n\n    closeMusic () {\n        this.setMusicVolume(0);\n        configuration.instance.setGlobalData('music', 'false');\n    }\n\n    openSound () {\n        this.setSoundVolume(1);\n        configuration.instance.setGlobalData('sound', 'true');\n    }\n\n    closeSound () {\n        this.setSoundVolume(0);\n        configuration.instance.setGlobalData('sound', 'false');\n    }\n}\n"]}