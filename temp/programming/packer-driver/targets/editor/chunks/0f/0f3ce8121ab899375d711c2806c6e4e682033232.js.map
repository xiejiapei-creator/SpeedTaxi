{"version":3,"sources":["file:///Users/xiejiapei/Documents/Car/assets/script/fight/roadPoint.ts"],"names":["_decorator","Component","Node","Vec3","Enum","macro","fightConstants","resourceUtil","ccclass","property","ROAD_POINT_TYPE","NORMAL","START","GREETING","PLATFORM","END","AI_START","ROAD_MOVE_TYPE","LINE","BEND","roadPoint","displayName","type","displayOrder","visible","moveType","arrCars","_generateCb","start","cars","split","startGenerateCar","generateCb","stopGenerateCar","scheduleOnce","delayStartGen","delayTime","getCarsBatch","scheduleGen","schedule","genInterval","REPEAT_FOREVER","rand","Math","floor","random","length","unschedule","普通节点","直线行走"],"mappings":"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","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nimport { _decorator, Component, Node, Vec3, Enum, macro } from \"cc\";\nimport { fightConstants } from \"./fightConstants\";\nimport { resourceUtil } from \"../framework/resourceUtil\";\nconst { ccclass, property } = _decorator;\n\nexport enum ROAD_POINT_TYPE {\n    '普通节点' = fightConstants.ROAD_POINT_TYPE.NORMAL,         //普通节点\n    '开始节点' = fightConstants.ROAD_POINT_TYPE.START,          //开始节点\n    '接客节点' = fightConstants.ROAD_POINT_TYPE.GREETING,       //平台节点（用于接客）\n    '送客节点' = fightConstants.ROAD_POINT_TYPE.PLATFORM,       //平台节点（用于送客）\n    '结束节点' = fightConstants.ROAD_POINT_TYPE.END,            //结束节点\n    'AI开始节点' = fightConstants.ROAD_POINT_TYPE.AI_START                //AI开始节点\n}\n\nEnum(ROAD_POINT_TYPE)\n\nexport enum ROAD_MOVE_TYPE {\n    \"直线行走\" = fightConstants.ROAD_MOVE_TYPE.LINE,       //直线行走\n    \"曲线行走\" = fightConstants.ROAD_MOVE_TYPE.BEND,       //曲线行走\n}\n\nEnum(ROAD_MOVE_TYPE)\n\n@ccclass(\"roadPoint\")\nexport class roadPoint extends Component {\n    @property({displayName: '类型', type: ROAD_POINT_TYPE, displayOrder: 1})\n    type: ROAD_POINT_TYPE = ROAD_POINT_TYPE.普通节点;\n\n    @property({displayName: '下一站', type: Node, displayOrder: 2})\n    next: Node | null = null;\n\n    @property({displayName: '行走方式', type: ROAD_MOVE_TYPE, displayOrder: 3})\n    moveType: ROAD_MOVE_TYPE = ROAD_MOVE_TYPE.直线行走;\n\n    @property({displayName: '顺时针', displayOrder: 4, visible:  function (this: roadPoint){\n        return this.moveType === fightConstants.ROAD_MOVE_TYPE.BEND;\n    }})\n    clockwise: boolean = false;\n\n    @property({displayName: '顾客方向', displayOrder: 4, visible:  function (this: roadPoint){\n        return this.type === fightConstants.ROAD_POINT_TYPE.GREETING || this.type === fightConstants.ROAD_POINT_TYPE.PLATFORM;\n    }})\n    direction: Vec3 = new Vec3();\n\n    @property({displayName: '延迟生成/秒', displayOrder: 5, visible:  function (this: roadPoint){\n        return this.type === fightConstants.ROAD_POINT_TYPE.AI_START;\n    }})\n    delayTime: number = 1; //默认不延迟\n\n    @property({displayName: '生成频率/秒', displayOrder: 5, visible:  function (this: roadPoint){\n        return this.type === fightConstants.ROAD_POINT_TYPE.AI_START;\n    }})\n    genInterval: number = 3;\n\n    @property({displayName: '车辆行驶速度', displayOrder: 5, visible:  function (this: roadPoint){\n        return this.type === fightConstants.ROAD_POINT_TYPE.AI_START;\n    }})\n    carSpeed: number = 0.05;\n\n    @property({displayName: '产生车辆(,分隔)', displayOrder: 5, visible:  function (this: roadPoint){\n        return this.type === fightConstants.ROAD_POINT_TYPE.AI_START;\n    }})\n    cars: string = '201';\n    arrCars: Array<string> = [];\n\n    _generateCb: Function | null = null;\n\n    start () {\n        // Your initialization goes here.\n        this.arrCars = this.cars.split(',');\n    }\n\n    startGenerateCar (generateCb: Function) {\n        if (this.type !== fightConstants.ROAD_POINT_TYPE.AI_START) {\n            return;\n        }\n\n        this._generateCb = generateCb;\n        this.stopGenerateCar();\n        this.scheduleOnce(this.delayStartGen, this.delayTime);\n\n        //触发资源预加载\n        resourceUtil.getCarsBatch(this.arrCars, ()=>{\n\n        }, ()=>{\n\n        });\n    }\n\n    delayStartGen () {\n        this.scheduleGen(); //时间到了先生成，然后再过一段时间再生成\n        this.schedule(this.scheduleGen, this.genInterval, macro.REPEAT_FOREVER);\n    }\n\n    scheduleGen () {\n        //随机生成车辆\n        let rand = Math.floor(Math.random() * this.arrCars.length);\n\n        if (this._generateCb) {\n            this._generateCb(this, this.arrCars[rand]);\n        }\n    }\n\n    stopGenerateCar () {\n        this.unschedule(this.delayStartGen);\n        this.unschedule(this.scheduleGen);\n    }\n\n    // update (deltaTime: number) {\n    //     // Your update function goes here.\n    // }\n}\n"]}